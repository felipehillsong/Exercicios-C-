// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoCursos.Repository.Data;

namespace ProjetoCursos.Repository.Migrations
{
    [DbContext(typeof(ProjetoCursosContext))]
    partial class ProjetoCursosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoCursos.Domain.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade");

                    b.Property<string>("Email");

                    b.Property<string>("ImagemURL");

                    b.Property<DateTime>("Nascimento");

                    b.Property<string>("Nome");

                    b.Property<string>("Sobrenome");

                    b.Property<int>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId");

                    b.Property<DateTime?>("DataFim");

                    b.Property<DateTime?>("DataInicio");

                    b.Property<string>("Nome");

                    b.Property<decimal>("Preco");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("ImagemURL");

                    b.Property<string>("MiniCurriculo");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.ProfessorCurso", b =>
                {
                    b.Property<int>("CursoId");

                    b.Property<int>("ProfessorId");

                    b.Property<int?>("AlunoId");

                    b.HasKey("CursoId", "ProfessorId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessoresCursos");
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId");

                    b.Property<string>("Nome");

                    b.Property<int?>("ProfessorId");

                    b.Property<string>("URL");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("RedesSociais");
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.Curso", b =>
                {
                    b.HasOne("ProjetoCursos.Domain.Models.Aluno", "Aluno")
                        .WithMany("Cursos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.ProfessorCurso", b =>
                {
                    b.HasOne("ProjetoCursos.Domain.Models.Aluno")
                        .WithMany("ProfessoresCursos")
                        .HasForeignKey("AlunoId");

                    b.HasOne("ProjetoCursos.Domain.Models.Curso", "Curso")
                        .WithMany("ProfessoresCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoCursos.Domain.Models.Professor", "Professor")
                        .WithMany("ProfessoresCursos")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoCursos.Domain.Models.RedeSocial", b =>
                {
                    b.HasOne("ProjetoCursos.Domain.Models.Aluno", "Aluno")
                        .WithMany("RedesSociais")
                        .HasForeignKey("AlunoId");

                    b.HasOne("ProjetoCursos.Domain.Models.Professor", "Professor")
                        .WithMany("RedesSociais")
                        .HasForeignKey("ProfessorId");
                });
#pragma warning restore 612, 618
        }
    }
}
